<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ls.dao.StudentMapper" >
  <resultMap id="BaseResultMap" type="ls.model.Student" >
    <id column="ID" property="id" jdbcType="DECIMAL" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="SEX" property="sex" jdbcType="VARCHAR" />
    <result column="LIKES" property="likes" jdbcType="VARCHAR" />
    <result column="CLASSID" property="classid" jdbcType="DECIMAL" />
  </resultMap>
  
  <resultMap id="BaseResultMap" type="ls.model.Student" >
    <id column="ID" property="id" jdbcType="DECIMAL" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="SEX" property="sex" jdbcType="VARCHAR" />
    <result column="LIKES" property="likes" jdbcType="VARCHAR" />
    <result column="CLASSID" property="classid" jdbcType="DECIMAL" />
    <association  property="clas" javaType="ls.mapping.ClassNameMapper.xml">
    	<id column="ID" property="id" jdbcType="DECIMAL" />
    	<result column="CCNAME" property="name" jdbcType="VARCHAR" />
    </association>
  </resultMap>
  
  <sql id="Base_Column_List" >
    ID, NAME, SEX, LIKES, CLASSID
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from STUDENT
    where ID = #{id,jdbcType=DECIMAL}
  </select>
  
  <select id="selectByCustomId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from STUDENT
    where ID = #{id,jdbcType=DECIMAL}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from STUDENT
    where ID = #{id,jdbcType=DECIMAL}
  </delete>
  <insert id="insert" parameterType="ls.model.Student" >
    insert into STUDENT (ID, NAME, SEX, 
      LIKES, CLASSID)
    values (#{id,jdbcType=DECIMAL}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{likes,jdbcType=VARCHAR}, #{classid,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="ls.model.Student" >
    insert into STUDENT
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="sex != null" >
        SEX,
      </if>
      <if test="likes != null" >
        LIKES,
      </if>
      <if test="classid != null" >
        CLASSID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=DECIMAL},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="likes != null" >
        #{likes,jdbcType=VARCHAR},
      </if>
      <if test="classid != null" >
        #{classid,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="ls.model.Student" >
    update STUDENT
    <set >
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        SEX = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="likes != null" >
        LIKES = #{likes,jdbcType=VARCHAR},
      </if>
      <if test="classid != null" >
        CLASSID = #{classid,jdbcType=DECIMAL},
      </if>
    </set>
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="ls.model.Student" >
    update STUDENT
    set NAME = #{name,jdbcType=VARCHAR},
      SEX = #{sex,jdbcType=VARCHAR},
      LIKES = #{likes,jdbcType=VARCHAR},
      CLASSID = #{classid,jdbcType=DECIMAL}
    where ID = #{id,jdbcType=DECIMAL}
  </update>
</mapper>